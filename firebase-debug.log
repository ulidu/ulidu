[debug] [2021-03-15T09:52:22.523Z] ----------------------------------------------------------------------
[debug] [2021-03-15T09:52:22.524Z] Command:       /usr/local/bin/firebase /Users/ulidu/.cache/firebase/tools/lib/node_modules/firebase-tools/lib/bin/firebase init
[debug] [2021-03-15T09:52:22.525Z] CLI Version:   9.6.1
[debug] [2021-03-15T09:52:22.525Z] Platform:      darwin
[debug] [2021-03-15T09:52:22.525Z] Node Version:  v12.18.1
[debug] [2021-03-15T09:52:22.526Z] Time:          Mon Mar 15 2021 15:22:22 GMT+0530 (India Standard Time)
[debug] [2021-03-15T09:52:22.526Z] ----------------------------------------------------------------------
[debug] [2021-03-15T09:52:22.526Z] 
[debug] [2021-03-15T09:52:22.528Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-03-15T09:52:22.529Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Applications/MAMP/htdocs/ulidu

Before we get started, keep in mind:

  * You are currently outside your home directory

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2021-03-15T09:52:35.231Z] > refreshing access token with scopes: []
[debug] [2021-03-15T09:52:35.232Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-03-15T09:52:35.628Z] <<< HTTP RESPONSE 200 {"expires":"Mon, 01 Jan 1990 00:00:00 GMT","pragma":"no-cache","cache-control":"no-cache, no-store, max-age=0, must-revalidate","date":"Mon, 15 Mar 2021 09:52:35 GMT","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-03-15T09:52:35.650Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2021-03-15T09:52:36.150Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2021-03-15T09:52:36.151Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project ulidu-dbaf1 (Ulidu) 
[info] 
=== Database Setup
[info] i  database: ensuring required API firebasedatabase.googleapis.com is enabled... 
[debug] [2021-03-15T09:52:37.070Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2021-03-15T09:52:37.070Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-03-15T09:52:37.235Z] <<< HTTP RESPONSE 200 {"pragma":"no-cache","date":"Mon, 15 Mar 2021 09:52:37 GMT","cache-control":"no-cache, no-store, max-age=0, must-revalidate","expires":"Mon, 01 Jan 1990 00:00:00 GMT","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-03-15T09:52:37.251Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/ulidu-dbaf1/services/firebasedatabase.googleapis.com  
 
[debug] [2021-03-15T09:52:38.653Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 15 Mar 2021 09:52:38 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] ✔  database: required API firebasedatabase.googleapis.com is enabled 
[info] 
[debug] [2021-03-15T09:52:38.655Z] >>> HTTP REQUEST GET https://firebasedatabase.googleapis.com/v1beta/projects/ulidu-dbaf1/locations/-/instances/ulidu-dbaf1-default-rtdb  
 
[debug] [2021-03-15T09:52:39.180Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 15 Mar 2021 09:52:39 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firebase Realtime Database Security Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2021-03-15T09:52:48.765Z] >>> HTTP REQUEST GET https://ulidu-dbaf1-default-rtdb.firebaseio.com/.settings/rules.json  
 
[debug] [2021-03-15T09:52:49.745Z] <<< HTTP RESPONSE 200 {"server":"nginx","date":"Mon, 15 Mar 2021 09:52:49 GMT","content-type":"application/json; charset=utf-8","content-length":"161","connection":"keep-alive","access-control-allow-origin":"*","cache-control":"no-cache","strict-transport-security":"max-age=31556926; includeSubDomains; preload"}
[info] ✔  Database Rules for ulidu-dbaf1-default-rtdb have been written to database.rules.json. 
[info] Future modifications to database.rules.json will update Realtime Database Security Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[debug] [2021-03-15T09:52:49.749Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/ulidu-dbaf1/services/firestore.googleapis.com  
 
[debug] [2021-03-15T09:52:51.248Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 15 Mar 2021 09:52:51 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-03-15T09:52:51.249Z] >>> HTTP REQUEST GET https://appengine.googleapis.com/v1/apps/ulidu-dbaf1  
 
[debug] [2021-03-15T09:52:51.909Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 15 Mar 2021 09:52:52 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-03-15T09:52:51.910Z] database_type: CLOUD_FIRESTORE
[debug] [2021-03-15T09:52:51.910Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-03-15T09:52:51.911Z] > authorizing via signed-in user
[debug] [2021-03-15T09:52:51.911Z] [iam] checking project ulidu-dbaf1 for permissions ["firebase.projects.get"]
[debug] [2021-03-15T09:52:51.912Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/ulidu-dbaf1:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2021-03-15T09:52:52.341Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 15 Mar 2021 09:52:52 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=194","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2021-03-15T09:52:54.044Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/ulidu-dbaf1/releases?pageSize=10&pageToken=  
 
[debug] [2021-03-15T09:52:55.434Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 15 Mar 2021 09:52:55 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-03-15T09:52:55.436Z] Found ruleset: projects/ulidu-dbaf1/rulesets/26cd6129-a777-4890-a03f-1f4afa2ce9bc
[debug] [2021-03-15T09:52:55.436Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/ulidu-dbaf1/rulesets/26cd6129-a777-4890-a03f-1f4afa2ce9bc  
 
[debug] [2021-03-15T09:52:56.789Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 15 Mar 2021 09:52:56 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2021-03-15T09:52:59.004Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/ulidu-dbaf1/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2021-03-15T09:52:59.005Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/ulidu-dbaf1/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2021-03-15T09:53:00.526Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 15 Mar 2021 09:53:00 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-03-15T09:53:00.533Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 15 Mar 2021 09:53:00 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2021-03-15T09:53:00.552Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-03-15T09:53:00.552Z] > authorizing via signed-in user
[debug] [2021-03-15T09:53:00.553Z] [iam] checking project ulidu-dbaf1 for permissions ["firebase.projects.get"]
[debug] [2021-03-15T09:53:00.553Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/ulidu-dbaf1:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2021-03-15T09:53:01.746Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 15 Mar 2021 09:53:01 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1003","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-03-15T09:53:01.748Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/ulidu-dbaf1/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2021-03-15T09:53:01.748Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/ulidu-dbaf1/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2021-03-15T09:53:03.213Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 15 Mar 2021 09:53:03 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-03-15T09:53:03.748Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 15 Mar 2021 09:53:03 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] ✔  Wrote functions/package.json 
[info] ✔  Wrote functions/.eslintrc.js 
[info] ✔  Wrote functions/index.js 
[info] ✔  Wrote functions/.gitignore 
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2021-03-15T09:53:58.442Z] >>> [apiv2][query] GET https://www.gstatic.com/firebasejs/releases.json [none]
[debug] [2021-03-15T09:53:58.579Z] <<< [apiv2][status] GET https://www.gstatic.com/firebasejs/releases.json 200
[debug] [2021-03-15T09:53:58.580Z] <<< [apiv2][body] GET https://www.gstatic.com/firebasejs/releases.json {"current":{"version":"8.3.0","browserURL":"https://www.gstatic.com/firebasejs/8.3.0/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/8.3.0/firebase.tgz"},"live":{"version":"8.3","browserURL":"https://www.gstatic.com/firebasejs/live/8.3/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/live/8.3/firebase.tgz"},"components":{"analytics":"https://www.gstatic.com/firebasejs/8.3.0/firebase-analytics.js","app":"https://www.gstatic.com/firebasejs/8.3.0/firebase-app.js","auth":"https://www.gstatic.com/firebasejs/8.3.0/firebase-auth.js","database":"https://www.gstatic.com/firebasejs/8.3.0/firebase-database.js","firestore":"https://www.gstatic.com/firebasejs/8.3.0/firebase-firestore.js","functions":"https://www.gstatic.com/firebasejs/8.3.0/firebase-functions.js","installations":"https://www.gstatic.com/firebasejs/8.3.0/firebase-installations.js","messaging":"https://www.gstatic.com/firebasejs/8.3.0/firebase-messaging.js","storage":"https://www.gstatic.com/firebasejs/8.3.0/firebase-storage.js","performance":"https://www.gstatic.com/firebasejs/8.3.0/firebase-performance.js","remote-config":"https://www.gstatic.com/firebasejs/8.3.0/firebase-remote-config.js","firestore.memory":"https://www.gstatic.com/firebasejs/8.3.0/firebase-firestore.memory.js"}}
[info] ✔  Wrote public/index.html 
[info] 
[info] i  Didn't detect a .git folder. Assuming /Applications/MAMP/htdocs/ulidu is the project root. 
[info] i  Authorizing with GitHub to upload your service account to a GitHub repository's secrets store. 
[info] 
[info] Visit this URL on this device to log in:
[info] https://github.com/login/oauth/authorize?client_id=89cf50f02ac6aaed3484&state=847293290&redirect_uri=http%3A%2F%2Flocalhost%3A9005&scope=read%3Auser%20repo%20public_repo
[info] 
[info] Waiting for authentication...
[debug] [2021-03-15T09:54:13.508Z] >>> HTTP REQUEST POST https://github.com/login/oauth/access_token  
 {"client_id":"89cf50f02ac6aaed3484","client_secret":"3330d14abc895d9a74d5f17cd7a00711fa2c5bf0","code":"90185e2c94f76a1fec05","redirect_uri":"http://localhost:9005","state":"847293290"}
[debug] [2021-03-15T09:54:13.979Z] <<< HTTP RESPONSE 200 {"server":"GitHub.com","date":"Mon, 15 Mar 2021 09:54:14 GMT","content-type":"application/json; charset=utf-8","transfer-encoding":"chunked","vary":"X-PJAX, Accept-Encoding, Accept, X-Requested-With","etag":"W/\"f02618c3ecaa74e7cdda0048eb6fb48b\"","cache-control":"max-age=0, private, must-revalidate","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","expect-ct":"max-age=2592000, report-uri=\"https://api.github.com/_private/browser/errors\"","content-security-policy":"default-src 'none'; base-uri 'self'; block-all-mixed-content; connect-src 'self' uploads.github.com www.githubstatus.com collector.githubapp.com api.github.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com cdn.optimizely.com logx.optimizely.com/v1/events wss://alive.github.com; font-src github.githubassets.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: github.githubassets.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com secured-user-images.githubusercontent.com/ *.githubusercontent.com; manifest-src 'self'; media-src 'none'; script-src github.githubassets.com; style-src 'unsafe-inline' github.githubassets.com; worker-src github.com/socket-worker-6832eced.js gist.github.com/socket-worker-6832eced.js","x-github-request-id":"1800:0FBE:1A2FA27:1BDBADF:604F2EC5"}
[debug] [2021-03-15T09:54:13.985Z] >>> [apiv2][query] GET https://api.github.com/user [none]
[debug] [2021-03-15T09:54:14.464Z] <<< [apiv2][status] GET https://api.github.com/user 200
[debug] [2021-03-15T09:54:14.464Z] <<< [apiv2][body] GET https://api.github.com/user {"login":"ulidu","id":53035144,"node_id":"MDQ6VXNlcjUzMDM1MTQ0","avatar_url":"https://avatars.githubusercontent.com/u/53035144?v=4","gravatar_id":"","url":"https://api.github.com/users/ulidu","html_url":"https://github.com/ulidu","followers_url":"https://api.github.com/users/ulidu/followers","following_url":"https://api.github.com/users/ulidu/following{/other_user}","gists_url":"https://api.github.com/users/ulidu/gists{/gist_id}","starred_url":"https://api.github.com/users/ulidu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ulidu/subscriptions","organizations_url":"https://api.github.com/users/ulidu/orgs","repos_url":"https://api.github.com/users/ulidu/repos","events_url":"https://api.github.com/users/ulidu/events{/privacy}","received_events_url":"https://api.github.com/users/ulidu/received_events","type":"User","site_admin":false,"name":"ULIDU THEERAKE","company":null,"blog":"","location":null,"email":null,"hireable":null,"bio":null,"twitter_username":null,"public_repos":9,"public_gists":0,"followers":8,"following":6,"created_at":"2019-07-18T06:49:05Z","updated_at":"2021-03-15T09:54:05Z","private_gists":0,"total_private_repos":3,"owned_private_repos":2,"disk_usage":200764,"collaborators":3,"two_factor_authentication":false,"plan":{"name":"free","space":976562499,"collaborators":0,"private_repos":10000}}
[info] 
[info] ✔  Success! Logged into GitHub as ulidu 
[info] 
